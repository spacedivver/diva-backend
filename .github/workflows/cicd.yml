name: CI/CD

on:
  push:
    branches: [main]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Create directories
        run: mkdir -p src/main/resources/

      - name: Set up application.properties
        run: echo "${{ secrets.APPLICATION_PROPERTIES }}" > src/main/resources/application.properties

      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: packaged-application
          path: build/libs/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: packaged-application
          path: deployment

      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@master
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          REMOTE_DIR: ${{ secrets.REMOTE_DIR }}
        with:
          script: |

            mkdir -p ${REMOTE_DIR}
            
            # 기존 실행 중인 애플리케이션 종료 (백그라운드 실행된 프로세스 종료)
            pkill -f 'java -jar ${REMOTE_DIR}/'
            
            # JAR 파일 전송
            scp -o StrictHostKeyChecking=no deployment/*.jar ${SSH_USERNAME}@${SSH_HOST}:${REMOTE_DIR}
            
            # 최신 JAR 파일 찾기
            JAR_FILE=$(ls -t ${REMOTE_DIR}/*.jar | head -n 1)
            
            # JAR 파일 실행 (백그라운드 실행)
            nohup java -jar $JAR_FILE > ${REMOTE_DIR}/app.log 2>&1 &
